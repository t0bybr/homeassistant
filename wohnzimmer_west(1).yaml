# =========================================================
# Jalousie Wohnzimmer West – Konfiguration
# =========================================================
# Dieses File definiert:
# - Helper-Entitäten (input_boolean, input_number, etc.)
# - Template-Cover (MQTT → LOGO Steuerung)
# - Blueprint-Verwendung (t0bybr/blinds.yaml)
#
# Tilt-System:
# - tilt_current: Automatisch getrackt (0% = vertikal, 100% = horizontal)
# - tilt_target: Zielwert bei Toggle (Standard: 75%)
# - tilt_enabled: An/Aus Toggle (2× Hoch-Taste)
# - Intelligente Drift-Vermeidung durch Referenz-Methode
#
# State Machine:
# - idle, moving_user, moving_automation, moving_wind
# - moving_tilt, adjusting_tilt_ref, recovering_position
#
# MQTT Topics:
# - logo/register/set/<register>: Zielposition in Ticks
# - logo/coil/set/<coil>: Motor an/aus (ON/OFF)
# =========================================================

# =========================================================
# Helper-Entitäten
# =========================================================

input_boolean:
  blinds_0_living_room_west_counting:
    name: "Jalousie West - Klick-Zählfenster aktiv"
    icon: mdi:timer-sand
  blinds_0_living_room_west_tilt_enabled:
    name: "Jalousie West - Neigung aktiviert"
    icon: mdi:blinds

input_select:
  blinds_0_living_room_west_state:
    name: "Jalousie West - Status"
    options:
      - idle
      - moving_user
      - moving_automation
      - moving_wind
      - moving_tilt
      - adjusting_tilt_ref
      - recovering_position
    initial: idle
    icon: mdi:state-machine

input_text:
  blinds_0_living_room_west_sequence_id:
    name: "Jalousie West - Sequenz-ID (intern)"
    initial: ""
  blinds_0_living_room_west_last_direction_text:
    name: "Jalousie West - Letzte Tastenrichtung"

input_number:
  # System-Parameter
  blinds_0_living_room_west_max_travel_ticks:
    name: "Jalousie West - Max. Fahrweg (Ticks)"
    min: 0
    max: 999
    mode: box
    step: 1
    icon: mdi:map-marker-distance

  blinds_0_living_room_west_position_backup:
    name: "Jalousie West - Position Backup (intern)"
    min: 0
    max: 999
    mode: box
    step: 1

  # LOGO Register-Nummern
  blinds_0_living_room_west_logo_register_counter:
    name: "Jalousie West - LOGO Register Counter"
    min: 0
    max: 999
    mode: box
    step: 1

  blinds_0_living_room_west_logo_register_target:
    name: "Jalousie West - LOGO Register Target"
    min: 0
    max: 9999
    mode: box
    step: 1

  # LOGO Coil-Nummern
  blinds_0_living_room_west_logo_coil_up:
    name: "Jalousie West - LOGO Coil Hoch"
    min: 0
    max: 9999
    mode: box
    step: 1

  blinds_0_living_room_west_logo_coil_down:
    name: "Jalousie West - LOGO Coil Runter"
    min: 0
    max: 9999
    mode: box
    step: 1

  # Bewegungsstatus
  blinds_0_living_room_west_last_moving_state:
    name: "Jalousie West - Letzter Bewegungsstatus"
    min: 0
    max: 3
    mode: box
    step: 1
    icon: mdi:arrow-up-down

  # Tilt-System
  blinds_0_living_room_west_tilt_current:
    name: "Jalousie West - Aktuelle Neigung"
    min: 0
    max: 100
    step: 1
    mode: slider
    unit_of_measurement: "%"
    icon: mdi:angle-acute

  blinds_0_living_room_west_tilt_target:
    name: "Jalousie West - Ziel-Neigung"
    min: 0
    max: 100
    step: 5
    mode: slider
    unit_of_measurement: "%"
    initial: 75
    icon: mdi:target

  blinds_0_living_room_west_tilt_ticks_close:
    name: "Jalousie West - Ticks für 0% Tilt (runter)"
    min: 0
    max: 50
    step: 1
    mode: box
    initial: 14
    icon: mdi:arrow-collapse-vertical

  blinds_0_living_room_west_tilt_ticks_open:
    name: "Jalousie West - Ticks für 100% Tilt (hoch)"
    min: 0
    max: 50
    step: 1
    mode: box
    initial: 15
    icon: mdi:arrow-expand-vertical

  blinds_0_living_room_west_min_motor_ticks:
    name: "Jalousie West - Minimale Motorlaufzeit (Ticks)"
    min: 1
    max: 10
    step: 1
    mode: box
    initial: 5
    icon: mdi:timer-cog

counter:
  blinds_0_living_room_west_clicks:
    name: "Jalousie West - Klickzähler"
    initial: 0
    icon: mdi:counter

# =========================================================
# Automation (Blueprint-Verwendung)
# =========================================================

automation:
  - use_blueprint:
      path: t0bybr/blinds.yaml
      input:
        name: "living_room_west"
        floor: "0"

        cover_entity: cover.blinds_0_living_room_west

        up_button_entity_id: binary_sensor.mosquitto_broker_mqtt_logo_coil_9
        down_button_entity_id: binary_sensor.mosquitto_broker_mqtt_logo_coil_8

        position_ticks_sensor_entity_id: sensor.mosquitto_broker_mqtt_logo_hr_104_position_raw
        movement_status_sensor_entity_id: sensor.mosquitto_broker_mqtt_logo_hr_104_status

        coil_up: 8303
        coil_down: 8304
        register_target: 535
        register_max_ticks_limit: 534
        register_counter: 20
        max_travel_ticks: 552

        # Tilt-Konfiguration
        tilt_target_default: 75
        tilt_position_threshold_pct: 80

# =========================================================
# Template Cover (MQTT → LOGO)
# =========================================================

cover:
  - platform: template
    covers:
      blinds_0_living_room_west:
        friendly_name: "Jalousie Wohnzimmer West"
        unique_id: "blinds_0_living_room_west"

        # Prozent-Position aus Ticks
        position_template: >
          {% set max_travel_ticks = states('input_number.blinds_0_living_room_west_max_travel_ticks') | int(1) %}
          {% set current_ticks    = states('sensor.mosquitto_broker_mqtt_logo_hr_104_position_raw') | float(0) %}
          {% if max_travel_ticks > 0 %}
            {{ (current_ticks / max_travel_ticks * 100) | round(0) }}
          {% else %}
            0
          {% endif %}

        # Status aus LOGO (0/1/2/3)
        value_template: >
          {% set s = states('sensor.mosquitto_broker_mqtt_logo_hr_104_status') | int(0) %}
          {% if   s == 1 %} open
          {% elif s == 3 %} opening
          {% elif s == 2 %} closing
          {% else        %} closed
          {% endif %}

        # --- Öffnen (auf 100% Ticks) ---
        open_cover:
          sequence:
            - action: mqtt.publish
              data:
                topic: "logo/register/set/{{ states('input_number.blinds_0_living_room_west_logo_register_target') | int }}"
                payload: "10000"
            - delay: "00:00:0.2"
            - action: mqtt.publish
              data:
                topic: "logo/register/set/{{ states('input_number.blinds_0_living_room_west_logo_register_target') | int }}"
                payload: "{{ states('input_number.blinds_0_living_room_west_max_travel_ticks') | int }}"

        # --- Schließen (auf 0 Ticks) ---
        close_cover:
          sequence:
            - action: mqtt.publish
              data:
                topic: "logo/register/set/{{ states('input_number.blinds_0_living_room_west_logo_register_target') | int }}"
                payload: "10000"
            - delay: "00:00:0.2"
            - action: mqtt.publish
              data:
                topic: "logo/register/set/{{ states('input_number.blinds_0_living_room_west_logo_register_target') | int }}"
                payload: "0"

        # --- Stop (10000 bestätigen) ---
        stop_cover:
          sequence:
            - action: mqtt.publish
              data:
                topic: "logo/register/set/{{ states('input_number.blinds_0_living_room_west_logo_register_target') | int }}"
                payload: "10000"

        # --- Setzen einer absoluten Position in % (→ Ticks) ---
        set_cover_position:
          sequence:
            - variables:
                max_travel_ticks: "{{ states('input_number.blinds_0_living_room_west_max_travel_ticks') | int(1) }}"
                target_ticks: "{{ (position | float(0) / 100 * max_travel_ticks) | int(0) }}"
            - action: mqtt.publish
              data:
                topic: "logo/register/set/{{ states('input_number.blinds_0_living_room_west_logo_register_target') | int }}"
                payload: "{{ target_ticks | int }}"
            # Hinweis: '10000'-Bestätigung erfolgt im Blueprint bei 2/3→0/1

        # --- Tilt-Anzeige: zeigt aktuelle Neigung ---
        tilt_template: "{{ states('input_number.blinds_0_living_room_west_tilt_current') | int(0) }}"
